{"mappings":"YAAA,IC4B6CA,EACrCC,ED7BFC,EAAO,CACXC,KAAMC,SAASC,eAAe,cC2BaL,ECxBAE,EAAKC,KDyB1CF,EE7BoB,CAC1B,CACEK,SAAU,4CACVC,KAAM,wJAGR,CACED,SAAU,8CACVC,KAAM,kGAGR,CACED,SAAU,oBACVC,KAAM,mFAGR,CACED,SAAU,6CACYC,KAAhB,wBAER,CACED,SAAU,aACVC,KAAM,sCAGR,CACED,SAAU,iCACKC,KAAT,4CAGR,CACED,SACE,4EAC+BC,KAA3B,0CAGR,CACED,SAAU,0DACaC,KAAjB,gCAGR,CACED,SAAU,8CACUC,KAAd,oCAGR,CACED,SAAU,yCACKC,KAAT,6CAGR,CACED,SAAU,WACVC,KAAM,+DAGR,CACED,SAAU,YACVC,KAAM,gGAGR,CACED,SAAU,gCACCC,KAAL,0NAGR,CACED,SAAU,iBACVC,KAAM,mJAGR,CACED,SAAU,gBACVC,KAAM,wEAGR,CACED,SAAU,yCACVC,KAAM,sGAGR,CACED,SAAU,wCACVC,KAAM,0EAGR,CACED,SAAU,kBACVC,KAAM,2DAGR,CACED,SAAU,kBACVC,KAAM,mCAGR,CACED,SAAU,WACVC,KAAM,yDAGR,CACED,SAAU,uBACVC,KAAM,yLAGR,CACED,SAAU,0BACAC,KAAJ,6PAGR,CACED,SAAU,8DACqBC,KAAzB,gFAER,CACED,SAAU,yCACAC,KAAJ,kHAGR,CACED,SAAU,oBACVC,KAAM,8IAGR,CACED,SAAU,WACVC,KAAM,0DAGR,CACED,SAAU,UACVC,KAAM,mCAGR,CACED,SAAU,gCACVC,KAAM,gNAGR,CACED,SAAU,qBACVC,KAAM,+HAGR,CACED,SAAU,yBACVC,KAAM,iMAGR,CACED,SAAU,mBACVC,KAAM,yNAGR,CACED,SAAU,YACVC,KAAM,iMAGR,CACED,SAAU,qBACVC,KAAM,6rBAGR,CACED,SAAU,wBACVC,KAAM,kFAGR,CACED,SAAU,iCACVC,KAAM,gHAGR,CACED,SAAU,iCACVC,KAAM,6HFnJLC,KAAI,SAAAC,EAAqBC,G,IAAlBJ,EAAQG,EAARH,SAAUC,EAAIE,EAAJF,KAChB,MAAO,uIAKmEI,OADjED,EAAQ,EAAE,yFAE4CC,OADWL,EAAS,8EACfK,OAALJ,EAAK,gC,IAIrEK,KAAK,IAERZ,EAAQa,mBAAmB,YAAaZ,E","sources":["src/js/common/const.js","src/js/helpers/function-rendering-items.js","src/js/comands-github.js","src/js/items/comands-github-items.js"],"sourcesContent":["const refs = {\n  UlEl: document.getElementById('hero-list'),\n};\n\nexport { refs };\n","function createRenderingItems(arr, element) {\n  const murkup = arr\n    .map(({ link, nameLink, textLink }, index) => {\n      return `\n    <div class=\"wrapper-hero\">\n            <li\n              class=\"hero-header__item hero-header__item--numbers\"\n            >${index + 1}</li>\n            <li class=\"hero-header__item hero-header__item--links\">\n              <a\n                href=\"${link}\"\n                target=\"_blank\" \n                rel=\"noopener norefferer nofollow\"\n                class=\"hero-header__link\"\n                >${nameLink}</a\n              >\n            </li>\n            <li class=\"hero-header__item hero-header__item--texts\">\n              ${textLink}\n            </li>\n    </div>\n          `;\n    })\n    .join('');\n\n  element.insertAdjacentHTML('beforeend', murkup);\n}\n\nfunction createRenderingItemsGitComands(arr, element) {\n  const murkup = arr\n    .map(({ nameText, text }, index) => {\n      return `\n    <div class=\"wrapper-hero\">\n            <li\n              class=\"hero-header__item hero-header__item--numbers\"\n            >${index + 1}</li>\n            <li class=\"hero-header__item hero-header__item--links color-text\">${nameText}</li>\n            <li class=\"hero-header__item hero-header__item--texts\">${text}</li>\n    </div>\n          `;\n    })\n    .join('');\n\n  element.insertAdjacentHTML('beforeend', murkup);\n}\n\nexport { createRenderingItems, createRenderingItemsGitComands };\n","import { comandsItems } from './items/comands-github-items';\nimport { createRenderingItemsGitComands } from './helpers/function-rendering-items';\nimport { refs } from './common/const';\n\ncreateRenderingItemsGitComands(comandsItems, refs.UlEl);\n","export const comandsItems = [\n  {\n    nameText: 'git config --global user.name \"Your Name\"',\n    text: 'Встанови ім`я користувача наступною командою: Замість \"Your Name\" введи своє реальне ім`я або псевдонім, під яким хочеш з`являтися в історії комітів',\n  },\n\n  {\n    nameText: 'git config --global user.email \"Your email\"',\n    text: 'Встанови електронну пошту командою:: Замість \"Your email\" введи свою реальну електронну адресу',\n  },\n\n  {\n    nameText: 'git config --list',\n    text: 'Ти маєш побачити своє ім`я користувача та електронну пошту у списку налаштувань',\n  },\n\n  {\n    nameText: 'git clone https://посилання_на_репозиторій',\n    text: 'Клонуєте репозиторій',\n  },\n  {\n    nameText: 'git branch',\n    text: 'Знати на який гільці ти знаходишся',\n  },\n\n  {\n    nameText: 'git branch \"назва-нової-гілки\"',\n    text: 'Створює нову гілку і залишається на main',\n  },\n\n  {\n    nameText:\n      'git checkout -b \"назва-нової-гілки\" або git switch -c \"назва-нової-гілки\"',\n    text: 'Створює нову гілку і переходить на неї',\n  },\n\n  {\n    nameText: 'git checkout \"назва-гілки\" або git switch \"назва-гілки\"',\n    text: 'Перехід на гілку яку створив',\n  },\n\n  {\n    nameText: 'git add . потім git commit -m“назва-коміта”',\n    text: 'Записує зміни до локальної гілки',\n  },\n\n  {\n    nameText: 'git push origin -u \"назва-вашої-гілки\"',\n    text: 'Створює гілку на git hub і публікує зміни',\n  },\n\n  {\n    nameText: 'git push',\n    text: 'Публікує ваші зміни на гілку якщо гілка створена на git hub',\n  },\n\n  {\n    nameText: 'git stash',\n    text: 'Коли ви ще не робили git add, git commit i git push, ця команда ховає наш код по типу Ctrl X',\n  },\n\n  {\n    nameText: 'git stash save \"назва коміту\"',\n    text: 'Оскільки ти можеш мати декілька стешів, щоб уникнути плутанини, рекомендується додавати коментар при створенні нового стеша. Це можна зробити за допомогою опції save, наприклад, ось так: git stash save \"my-comment\"',\n  },\n\n  {\n    nameText: 'git stash list',\n    text: 'Кожен стек (збережені незавершені зміни) зберігається з унікальним ідентифікатором та описом, що дозволяє легко ідентифікувати відкладені зміни',\n  },\n\n  {\n    nameText: 'git stash pop',\n    text: 'Щоб застосувати найостанніші відкладені зміни і видалити їх із стеку',\n  },\n\n  {\n    nameText: 'git stash apply stash@{<number_stash>}',\n    text: 'Якщо ти хочеш застосувати певний stash без його видалення із стеку git stash apply stash@{56f4530}',\n  },\n\n  {\n    nameText: 'git stash drop stash@{<number_stash>}',\n    text: 'Щоб видалити конкретний stash із списку git stash drop stash@{56f4530}',\n  },\n\n  {\n    nameText: 'git stash clear',\n    text: 'Для видалення усіх збережених стеків змін, використовуй',\n  },\n\n  {\n    nameText: 'git stash apply',\n    text: 'Повернути ваш незакомічений код',\n  },\n\n  {\n    nameText: 'git pull',\n    text: 'Стягуємо на ту гілку на якій ви знаходитесь всі зміни',\n  },\n\n  {\n    nameText: 'git pull origin main',\n    text: 'Це оновить вашу локальну копію main гілки із віддаленого репозиторію і якщо була прийнята гілка її не трабо окремо видаляти локально вона оновиться як на github тобто сама видалится',\n  },\n\n  {\n    nameText: 'git merge \"назва-гілки\"',\n    text: ' Це робить тім лід - після того як перевірили код і одобрили в гильці (header) в який ми робили треба перейти на main і вести команду git merge header тоді все підтянется в main і після цього робимо git push з main і оновлюємо гілочку main на github',\n  },\n\n  {\n    nameText: 'git branch -d ‘назва-гілки’ або git branch -D ‘назва-гілки’',\n    text: 'Видалення у себе VScode гілки ‘назва-гілки’ але ми немаємо в ній знаходитись',\n  },\n  {\n    nameText: 'git push origin --delete \"назва-гілки\"',\n    text: 'Це робить тім лід - видалення гілки з github робимо в тому випадку тім лід не налаштував автомотичне видалення',\n  },\n\n  {\n    nameText: 'git merge --abort',\n    text: 'Відміняє злиття гілок в тому випадко якщо ти вже зробив git merge \"назва-гілки\" і в тебе вийшли конфлікти але ти не можеш сам їх виправити',\n  },\n\n  {\n    nameText: 'git diff',\n    text: 'Зміни які ви внесли в свій код після останнього коміта',\n  },\n\n  {\n    nameText: 'git log',\n    text: 'переглянути всю історію комітів',\n  },\n\n  {\n    nameText: 'git remote add origin SSH-URL',\n    text: 'Для прив`язки твого локального репозиторію до GitHub, де SSH-URL — це той шлях, що було скопійовано в попередньому кроці, наприклад:git remote add origin git@github.com:Nataliia-goit/remote_repository.git',\n  },\n\n  {\n    nameText: 'git remote set-url',\n    text: 'наприклад:git remote set-url origin git@github.com:Nataliia-goit/remote_repository.git Ця команда змінить SSH-URL на новий.',\n  },\n\n  {\n    nameText: 'git rm --cached <file>',\n    text: 'Якщо ти хочеш, щоб зміни файлу my-passwords.txt ніколи не потрапляли до комітів і вилучити його з індексу назавжди, то це можна зробити за допомогою команди git rm --cached my-passwords.txt',\n  },\n\n  {\n    nameText: 'git reset <file>',\n    text: 'Однак, якщо ти хочеш зберегти зміни у файлі my-passwords.txt локально і просто вилучити його з поточного індексу, щоб він не потрапив до наступного коміту, ти можеш скористатися командою git reset my-passwords.txt',\n  },\n\n  {\n    nameText: 'git reset',\n    text: 'Якщо ж ти хочеш скинути стан індексу для всіх файлів до останнього коміту і скасувати всі зміни, які були додані до індексу (staging area), використовуй команду git reset без вказання файлу',\n  },\n\n  {\n    nameText: 'git commit --amend',\n    text: 'Це відкриє текстовий редактор з останнім повідомленням коміту, яке ти можеш відредагувати. Якщо ти хочеш залишити повідомлення без змін, просто збережи та закрий редактор. Якщо ж ти хочеш змінити повідомлення коміту, додай опцію -**m** з новим текстом повідомлення: git commit --amend -m \"add a new task and item to shopping list\" Опція --amend змінює історію комітів, створюючи новий коміт із новим хешем (ідентифікатором). Це може створити проблеми для спільної роботи, якщо змінений коміт уже був відправлений на віддалений репозиторій і ці зміни витягнув хтось інший. Тому опцію --amend варто використовувати тільки для локальних комітів, які ще не були відправлені до віддаленого репозиторію.',\n  },\n\n  {\n    nameText: 'git log -n <quantity>',\n    text: 'Кількість комітів Наприклад, ця команда покаже два останні коміти git log -n 2',\n  },\n\n  {\n    nameText: 'git log --since=<times_period>',\n    text: 'Наприклад ця команда покаже коміти, які були створені протягом останніх двох тижнів: git log --since=2.weeks',\n  },\n\n  {\n    nameText: 'git log --author=\"author name\"',\n    text: 'Фільтрація за автором Наприклад ця команда покаже коміти, які було створені автором nataliia git log --author=\"nataliia\"',\n  },\n];\n"],"names":["element","murkup","$9ad0b78faeb0983e$export$21666b427502ea6d","UlEl","document","getElementById","nameText","text","map","param","index","concat","join","insertAdjacentHTML"],"version":3,"file":"comands-github.9b271467.js.map"}