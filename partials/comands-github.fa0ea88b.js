!function(t,e){const i=t.map((({nameText:t,text:e},i)=>`\n    <div class="wrapper-hero">\n            <li\n              class="hero-header__item hero-header__item--numbers"\n            >${i+1}</li>\n            <li class="hero-header__item hero-header__item--links color-text">${t}</li>\n            <li class="hero-header__item hero-header__item--texts">${e}</li>\n    </div>\n          `)).join("");e.insertAdjacentHTML("beforeend",i)}([{nameText:'git config --global user.name "Your Name"',text:'Встанови ім`я користувача наступною командою: Замість "Your Name" введи своє реальне ім`я або псевдонім, під яким хочеш з`являтися в історії комітів'},{nameText:'git config --global user.email "Your email"',text:'Встанови електронну пошту командою:: Замість "Your email" введи свою реальну електронну адресу'},{nameText:"git config --list",text:"Ти маєш побачити своє ім`я користувача та електронну пошту у списку налаштувань"},{nameText:"git clone https://посилання_на_репозиторій",text:"Клонуєте репозиторій"},{nameText:"git branch",text:"Знати на який гільці ти знаходишся"},{nameText:'git branch "назва-нової-гілки"',text:"Створює нову гілку і залишається на main"},{nameText:'git checkout -b "назва-нової-гілки" або git switch -c "назва-нової-гілки"',text:"Створює нову гілку і переходить на неї"},{nameText:'git checkout "назва-гілки" або git switch "назва-гілки"',text:"Перехід на гілку яку створив"},{nameText:"git add . потім git commit -m“назва-коміта”",text:"Записує зміни до локальної гілки"},{nameText:'git push origin -u "назва-вашої-гілки"',text:"Створює гілку на git hub і публікує зміни"},{nameText:"git push",text:"Публікує ваші зміни на гілку якщо гілка створена на git hub"},{nameText:"git stash",text:"Коли ви ще не робили git add, git commit i git push, ця команда ховає наш код по типу Ctrl X"},{nameText:"git stash apply",text:"Повернути ваш незакомічений код"},{nameText:"git pull",text:"Стягуємо на ту гілку на якій ви знаходитесь всі зміни"},{nameText:"git pull origin main",text:"Це оновить вашу локальну копію main гілки із віддаленого репозиторію і якщо була прийнята гілка її не трабо окремо видаляти локально вона оновиться як на github тобто сама видалится"},{nameText:'git merge "назва-гілки"',text:" Це робить тім лід - після того як перевірили код і одобрили в гильці (header) в який ми робили треба перейти на main і вести команду git merge header тоді все підтянется в main і після цього робимо git push з main і оновлюємо гілочку main на github"},{nameText:"git branch -d ‘назва-гілки’ або git branch -D ‘назва-гілки’",text:"Видалення у себе VScode гілки ‘назва-гілки’ але ми немаємо в ній знаходитись"},{nameText:'git push origin --delete "назва-гілки"',text:"Це робить тім лід - видалення гілки з github робимо в тому випадку тім лід не налаштував автомотичне видалення"},{nameText:"git merge --abort",text:'Відміняє злиття гілок в тому випадко якщо ти вже зробив git merge "назва-гілки" і в тебе вийшли конфлікти але ти не можеш сам їх виправити'},{nameText:"git diff",text:"Зміни які ви внесли в свій код після останнього коміта"},{nameText:"git log",text:"переглянути всю історію комітів"}],{UlEl:document.getElementById("hero-list")}.UlEl);
//# sourceMappingURL=comands-github.fa0ea88b.js.map
